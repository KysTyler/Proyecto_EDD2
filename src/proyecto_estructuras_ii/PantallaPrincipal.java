/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_estructuras_ii;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.EOFException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author enuil
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listCamposPantalla = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        taCampos = new javax.swing.JTextArea();
        camposLabel = new javax.swing.JLabel();
        jPanel_BG = new javax.swing.JPanel();
        jLabel_current = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Display = new javax.swing.JTextArea();
        jLabel_Title = new javax.swing.JLabel();
        jLabel_BG = new javax.swing.JLabel();
        MenuPrincipal = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        newFile = new javax.swing.JMenuItem();
        openFile = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();
        closeFile = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Campos = new javax.swing.JMenu();
        newCampo = new javax.swing.JMenuItem();
        listCampos = new javax.swing.JMenuItem();
        modCampos = new javax.swing.JMenuItem();
        delCampos = new javax.swing.JMenuItem();
        Registros = new javax.swing.JMenu();
        introRegistros = new javax.swing.JMenuItem();
        modRegistros = new javax.swing.JMenuItem();
        searchRegistros = new javax.swing.JMenuItem();
        deleteRegistros = new javax.swing.JMenuItem();
        listRegistros = new javax.swing.JMenuItem();
        Indices = new javax.swing.JMenu();
        newIndex = new javax.swing.JMenuItem();
        reindexFile = new javax.swing.JMenuItem();
        Estandarizacion = new javax.swing.JMenu();
        exportExcel = new javax.swing.JMenuItem();
        exportXML = new javax.swing.JMenuItem();

        taCampos.setColumns(20);
        taCampos.setRows(5);
        jScrollPane1.setViewportView(taCampos);

        camposLabel.setText("Los campos disponibles para registros son los siguientes:");

        javax.swing.GroupLayout listCamposPantallaLayout = new javax.swing.GroupLayout(listCamposPantalla.getContentPane());
        listCamposPantalla.getContentPane().setLayout(listCamposPantallaLayout);
        listCamposPantallaLayout.setHorizontalGroup(
            listCamposPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listCamposPantallaLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(camposLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        listCamposPantallaLayout.setVerticalGroup(
            listCamposPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listCamposPantallaLayout.createSequentialGroup()
                .addGroup(listCamposPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listCamposPantallaLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(camposLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(listCamposPantallaLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_BG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_current.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel_current.setForeground(new java.awt.Color(255, 150, 119));
        jLabel_current.setText("Current File: ");
        jPanel_BG.add(jLabel_current, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 370, -1));

        jTextArea_Display.setEditable(false);
        jTextArea_Display.setColumns(20);
        jTextArea_Display.setRows(5);
        jScrollPane2.setViewportView(jTextArea_Display);

        jPanel_BG.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 470, 300));

        jLabel_Title.setFont(new java.awt.Font("BankGothic Md BT", 3, 36)); // NOI18N
        jLabel_Title.setForeground(new java.awt.Color(255, 150, 119));
        jLabel_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Title.setText("File X Manager");
        jLabel_Title.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_BG.add(jLabel_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 370, -1));

        jLabel_BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Degradado.png"))); // NOI18N
        jPanel_BG.add(jLabel_BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 505));

        getContentPane().add(jPanel_BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Archivo.setText("Archivo");
        Archivo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        newFile.setText("Nuevo Archivo");
        newFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileActionPerformed(evt);
            }
        });
        Archivo.add(newFile);

        openFile.setText("Abrir Archivo");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        Archivo.add(openFile);

        saveFile.setText("Guardar Archivo");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        Archivo.add(saveFile);

        closeFile.setText("Cerrar Archivo");
        Archivo.add(closeFile);

        Exit.setText("Salir");
        Archivo.add(Exit);

        MenuPrincipal.add(Archivo);

        Campos.setText("Campos");
        Campos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        newCampo.setText("Nuevo Campo");
        newCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCampoActionPerformed(evt);
            }
        });
        Campos.add(newCampo);

        listCampos.setText("Listar Campos");
        listCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listCamposActionPerformed(evt);
            }
        });
        Campos.add(listCampos);

        modCampos.setText("Modificar Campos");
        Campos.add(modCampos);

        delCampos.setText("Eliminar Campos");
        Campos.add(delCampos);

        MenuPrincipal.add(Campos);

        Registros.setText("Registros");
        Registros.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        introRegistros.setText("Introducir Registros");
        Registros.add(introRegistros);

        modRegistros.setText("Modificar Registros");
        Registros.add(modRegistros);

        searchRegistros.setText("Buscar Registros");
        Registros.add(searchRegistros);

        deleteRegistros.setText("Borrar Registros");
        Registros.add(deleteRegistros);

        listRegistros.setText("Listar Registros");
        Registros.add(listRegistros);

        MenuPrincipal.add(Registros);

        Indices.setText("Indices");
        Indices.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        newIndex.setText("Crear Indices");
        Indices.add(newIndex);

        reindexFile.setText("Re-indexar Archivos");
        Indices.add(reindexFile);

        MenuPrincipal.add(Indices);

        Estandarizacion.setText("Estandarizacion");
        Estandarizacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        exportExcel.setText("Exportar en archivo Excel");
        Estandarizacion.add(exportExcel);

        exportXML.setText("Exportar en XML con Schema");
        Estandarizacion.add(exportXML);

        MenuPrincipal.add(Estandarizacion);

        setJMenuBar(MenuPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser("./");//instanciar
        //y agregar una extension que filtre
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
        jfc.addChoosableFileFilter(filtro);
        int seleccion = jfc.showSaveDialog(this);//muestre la ventana 
        FileWriter fw = null;
        BufferedWriter bw = null;
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {
                File fichero = null; //instancia es null porque hay que ponerlo en una extension
                if (jfc.getFileFilter().getDescription().equals("Archivos de Texto")) { //si el filtro es archivo de texto
                    fichero = new File(jfc.getSelectedFile().getPath() + ".txt");//agarre el archivo y concatene la extension

                } else {
                    fichero = jfc.getSelectedFile();//capture el selected file
                }
                fw = new FileWriter(fichero);//apunta al archivo
                bw = new BufferedWriter(fw);//apunta al canal
                bw.write("");
                bw.flush();//pasar a rom
                JOptionPane.showMessageDialog(this, "Archivo guardado exitosamente");
            } catch (Exception e) {
            } finally {
                try {
                    bw.close();
                    fw.close();
                } catch (IOException ex) {
                }
            }
        }
    }//GEN-LAST:event_newFileActionPerformed

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        // TODO add your handling code here:
        FileReader fr = null;
        BufferedReader br = null;
        try {
            JFileChooser jfc = new JFileChooser("./"); //donde deseamos que aparezca
            //crear los filtros
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
            FileNameExtensionFilter filtro2 = new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp");
            //setear los filtros
            jfc.setFileFilter(filtro);//forma 1: marcado como seleccionado
            jfc.addChoosableFileFilter(filtro2);//forma 2: agregarlo a la lista
            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                archivoCargado = jfc.getSelectedFile();//apunta hacia el objeto seleccionado
                fr = new FileReader(archivoCargado);//apunta hacia el archivo
                br = new BufferedReader(fr);//apunta hacia el fileReader
                
                jLabel_current.setText("Current file: " + archivoCargado.getName());
                
                try {
                    String line = "";
                    jTextArea_Display.setText("");
                    while((line = br.readLine()) != null) {
                        jTextArea_Display.append(line);
                        jTextArea_Display.append("\n");
                    }
                } catch (EOFException e) {
                }
                
            }
        } catch (Exception e) {
        } finally {
            try {
                br.close();
                fr.close();
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_openFileActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        try {
            FileWriter fw = null;
            BufferedWriter bw = null;
            String aux = "";
            for (String temp : campos) {
                fw = new FileWriter(archivoCargado, false);
                bw = new BufferedWriter(fw);
                aux += temp;
                bw.write(aux);
                bw.flush();
            }
            bw.close();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "EXITO", "El archivo se ha guardado correctamente", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_saveFileActionPerformed

    private void newCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCampoActionPerformed
        // TODO add your handling code here:
        String campo = JOptionPane.showInputDialog("Ingrese el nuevo campo a anexar en los registros");
        campo = campo.toUpperCase();
        campo += "=";
        JOptionPane.showMessageDialog(this, "Campo agregado exitosamente");
        campos.add(campo);
    }//GEN-LAST:event_newCampoActionPerformed

    private void listCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listCamposActionPerformed
        // TODO add your handling code here:
        listCamposPantalla.pack();
        listCamposPantalla.setLocationRelativeTo(this);
        listCamposPantalla.setVisible(true);
        String aux = "";
        for (Object campo : campos) {
            aux += campo.toString().replace('=', ' ');
            aux += "\n";
        }
        taCampos.setText(aux);
        taCampos.setEditable(false);
    }//GEN-LAST:event_listCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Archivo;
    private javax.swing.JMenu Campos;
    private javax.swing.JMenu Estandarizacion;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu Indices;
    private javax.swing.JMenuBar MenuPrincipal;
    private javax.swing.JMenu Registros;
    private javax.swing.JLabel camposLabel;
    private javax.swing.JMenuItem closeFile;
    private javax.swing.JMenuItem delCampos;
    private javax.swing.JMenuItem deleteRegistros;
    private javax.swing.JMenuItem exportExcel;
    private javax.swing.JMenuItem exportXML;
    private javax.swing.JMenuItem introRegistros;
    private javax.swing.JLabel jLabel_BG;
    private javax.swing.JLabel jLabel_Title;
    private javax.swing.JLabel jLabel_current;
    private javax.swing.JPanel jPanel_BG;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_Display;
    private javax.swing.JMenuItem listCampos;
    private javax.swing.JDialog listCamposPantalla;
    private javax.swing.JMenuItem listRegistros;
    private javax.swing.JMenuItem modCampos;
    private javax.swing.JMenuItem modRegistros;
    private javax.swing.JMenuItem newCampo;
    private javax.swing.JMenuItem newFile;
    private javax.swing.JMenuItem newIndex;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JMenuItem reindexFile;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JMenuItem searchRegistros;
    private javax.swing.JTextArea taCampos;
    // End of variables declaration//GEN-END:variables
    private LinkedList registros = new LinkedList();
    private ArrayList<String> campos = new ArrayList<String>();
    private File archivoCargado;
}
